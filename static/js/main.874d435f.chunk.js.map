{"version":3,"sources":["components/stopwatch.component.js","App.js","index.js"],"names":["Stopwatch","handleStartStop","state","isRunning","setState","clearInterval","timer","timerTime","timerStart","Date","now","setInterval","reset","this","milliseconds","Math","floor","slice","seconds","minutes","hours","className","onClick","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PAwEeA,E,kDArEX,aAAc,IAAD,8BACT,gBAOAC,gBAAkB,WAEX,EAAKC,MAAMC,WACV,EAAKC,SAAS,CAACD,WAAW,IAC1BE,cAAc,EAAKC,SAGnB,EAAKF,SAAS,CACVD,WAAW,EACXI,UAAW,EAAKL,MAAMK,UACtBC,WAAYC,KAAKC,MAAQ,EAAKR,MAAMK,YAExC,EAAKD,MAAQK,aAAY,WACrB,EAAKP,SAAS,CACVG,UAAWE,KAAKC,MAAQ,EAAKR,MAAMM,eAExC,MAxBF,EA2BRI,MAAQ,WACJ,EAAKR,SAAS,CACVG,UAAU,EACVC,WAAW,KA5BpB,EAAKN,MAAQ,CACTC,WAAW,EACXK,WAAW,EACXD,UAAU,GALL,E,qDAmCH,IACCA,EAAaM,KAAKX,MAAlBK,UACHO,GAAgB,IAAOC,KAAKC,MAAMT,EAAY,IAAK,KAAMU,OAAO,GAChEC,GAAW,IAAOH,KAAKC,MAAMT,EAAW,KAAO,IAAKU,OAAO,GAC3DE,GAAW,IAAOJ,KAAKC,MAAMT,EAAY,KAAS,IAAKU,OAAO,GAC9DG,GAAS,IAAML,KAAKC,MAAMT,EAAY,OAAUU,OAAO,GAE3D,OACI,6BACI,yBAAKI,UAAU,WACX,yBAAKA,UAAU,QACX,wCACA,yBAAKA,UAAU,cACVD,GAEL,yBAAKC,UAAU,cACVF,GAEL,yBAAKE,UAAU,cACXH,GAEJ,yBAAKG,UAAU,cACVP,IAGb,4BAASO,UAAWR,KAAKX,MAAMC,UAAW,0CAA2C,2CACpFmB,QAAST,KAAKZ,iBAAkBY,KAAKX,MAAMC,UAAW,OAAO,SAE9D,4BAAQkB,UAAU,2CAA2CC,QAAST,KAAKD,OAA3E,e,GAhEQW,aCWTC,MARf,WACE,OACE,yBAAKH,UAAU,aACb,kBAAC,EAAD,QCFNI,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.874d435f.chunk.js","sourcesContent":["import React , {Component} from 'react'\r\n\r\nclass Stopwatch extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            isRunning: false,\r\n            timerStart:0,\r\n            timerTime:0\r\n        }\r\n    }\r\n        handleStartStop = () => \r\n        {\r\n            if(this.state.isRunning){\r\n                this.setState({isRunning: false});\r\n                clearInterval(this.timer);\r\n            } \r\n            else{\r\n                this.setState({\r\n                    isRunning: true,\r\n                    timerTime: this.state.timerTime,\r\n                    timerStart: Date.now() - this.state.timerTime\r\n                })\r\n                this.timer = setInterval(()=> {\r\n                    this.setState({\r\n                        timerTime: Date.now() - this.state.timerStart\r\n                    })\r\n                }, 10)\r\n            }        \r\n        }\r\n         reset = ()=> {\r\n             this.setState({\r\n                 timerTime:0,\r\n                 timerStart:0\r\n             })\r\n         }\r\n        \r\n        \r\n    render() {\r\n        const {timerTime} = this.state;\r\n        let milliseconds = (\"0\" + (Math.floor(timerTime / 10)% 100)).slice(-2)\r\n        let seconds = (\"0\" + (Math.floor(timerTime /1000)% 60)).slice(-2);\r\n        let minutes = (\"0\" + (Math.floor(timerTime / 60000) % 60)).slice(-2);\r\n        let hours = (\"0\" + Math.floor(timerTime / 3600000)).slice(-2);\r\n        \r\n        return (\r\n            <div>\r\n                <div className=\"counter\">\r\n                    <div className=\"time\">\r\n                        <p>StopWatch</p>\r\n                        <div className=\"time-value\">\r\n                            {hours}\r\n                        </div>\r\n                        <div className=\"time-value\">\r\n                            {minutes}\r\n                        </div>\r\n                        <div className=\"time-value\">\r\n                           {seconds}\r\n                        </div>\r\n                        <div className=\"time-value\">\r\n                            {milliseconds}\r\n                        </div>\r\n                    </div> \r\n                <button  className={this.state.isRunning? \"btn btn-outline-danger btn-lg btn-block\": \"btn btn-outline-primary btn-lg btn-block\"}\r\n                 onClick={this.handleStartStop}>{this.state.isRunning? \"Stop\":\"Start\"}\r\n                 </button>\r\n                <button className=\"btn btn-outline-warning btn-sm btn-block\" onClick={this.reset}>Reset</button>\r\n                  </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Stopwatch;\r\n \r\n","import React from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport './App.css';\nimport Stopwatch from './components/stopwatch.component'\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Stopwatch />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}